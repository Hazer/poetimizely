name: release

on:
  push:
    tags:
      - v*

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - id: versions
      name: Set versions
      run: |
        newVersion=$(echo ${GITHUB_REF/refs\/tags\//} | cut -c 2-)
        generatorVersion=$(cd generator && ./gradlew properties -q | grep "version:" | awk '{print $2}')
        gradlePluginVersion=$(cd gradle-plugin && ./gradlew properties -q | grep "version:" | awk '{print $2}')
        mavenPluginVersion=$(cd maven-plugin && ./mvnw org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "::set-output name=NEW_VERSION::$newVersion"
        echo "::set-output name=GENERATOR_VERSION::$generatorVersion"
        echo "::set-output name=GRADLE_PLUGIN_VERSION_VERSION::$gradlePluginVersion"
        echo "::set-output name=MAVEN_PLUGIN_VERSION_VERSION::$mavenPluginVersion"

    - name: Check if there is a version mismatch between generator, gradle-plugin and maven-plugin
      if: ${{ steps.versions.outputs.GENERATOR_VERSION }} != ${{ steps.versions.outputs.NEW_VERSION }} || ${{ steps.versions.outputs.GRADLE_PLUGIN_VERSION }} != ${{ steps.versions.outputs.NEW_VERSION }} || ${{ steps.versions.outputs.MAVEN_PLUGIN_VERSION }} != ${{ steps.versions.outputs.NEW_VERSION }}
      run: exit 1

    - name: Build and publish generator in local Maven repository
      run: ./gradlew publishToMavenLocal
      working-directory: ./generator

    - name: Build and publish generator in JCenter
      run: ./gradlew bintrayUpload
      working-directory: ./generator
      env:
        BINTRAY_API_USER: ${{ secrets.BINTRAY_API_USER }}
        BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}

    - name: Build and publish the Maven plugin in JCenter
      run: ./mvnw deploy --settings=settings.xml
      working-directory: ./maven-plugin
      env:
        BINTRAY_API_USER: ${{ secrets.BINTRAY_API_USER }}
        BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}

    - name: Build and publish the Gradle plugin in Gradle Plugin Portal
      run: ./gradlew publishPlugins -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}
      working-directory: ./gradle-plugin

    - name: Create GitHub release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.versions.outputs.NEW_VERSION }}
        release_name: ${{ steps.versions.outputs.NEW_VERSION }}
        body: |
          https://plugins.gradle.org/plugin/com.patxi.poetimizely/${{ steps.versions.outputs.GRADLE_PLUGIN_VERSION }}
          https://bintray.com/patxibocos/com.patxi/poetimizely-generator/${{ steps.versions.outputs.GENERATOR_VERSION }}
          https://bintray.com/patxibocos/com.patxi/poetimizely-maven-plugin/${{ steps.versions.outputs.MAVEN_PLUGIN_VERSION }}